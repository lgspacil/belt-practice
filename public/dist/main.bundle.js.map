{"version":3,"sources":["webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src async","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app-routing.module.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.component.css","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.component.html","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.component.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.module.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/dashboard/dashboard.component.css","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/dashboard/dashboard.component.html","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/dashboard/dashboard.component.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/http.service.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/login/login.component.css","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/login/login.component.html","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/login/login.component.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/topic/topic.component.css","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/topic/topic.component.html","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/topic/topic.component.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/user-profile/user-profile.component.css","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/user-profile/user-profile.component.html","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/app/user-profile/user-profile.component.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/environments/environment.ts","webpack:////Users/lgspacil/Desktop/discussionBoard-server/public/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { LoginComponent } from \"app/login/login.component\";\nimport { TopicComponent } from \"app/topic/topic.component\";\nimport { UserProfileComponent } from \"app/user-profile/user-profile.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n\n  {path: 'dashboard', component: DashboardComponent},\n  {path: '', component: LoginComponent},\n  {path: 'topic/:id', component: TopicComponent},\n  {path: 'user/:id', component: UserProfileComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".parent{\\n    border: 5px solid blue;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n\\n<div class=\\\"parent\\\"> \\n  <h2>Parent</h2>\\n\\n  <a [routerLink] =\\\"['/']\\\" (click)='enableLogin()'>Home</a>\\n\\n  {{username | json}}\\n\\n  <div *ngIf=\\\"clicked == null\\\">\\n    <form>\\n      Username <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"username.name\\\">\\n      <button type=\\\"button\\\" (click)=\\\"submitForm()\\\">Submit</button>\\n    </form>\\n  </div>\\n\\n<router-outlet></router-outlet>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from \"app/http.service\";\nimport { CookieService } from \"angular2-cookie/services/cookies.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(private _httpService: HttpService, private _router: Router, private _cookieService:CookieService) { \n  }\n\n  clicked = null;\n  username = {name: ''};\n\n  \n\n\n  submitForm(){\n    //making a cookie --- passing in the name\n    this._cookieService.put('thisIsASecret', this.username.name);\n    this.clicked = true;\n    \n    this._httpService.addNewUser(this.username)\n      .then((id) => {\n        console.log(\"we posted to the DB in the component.ts, here is the user_id: \", id); \n\n        //get the person who just logged in or the new users ID:\n        this._cookieService.put('userid', id);\n        \n        this._router.navigate(['/dashboard']);\n      })\n\n      .catch((err) => {\n        console.log(\"unable to post to the DB\");\n      })\n\n  }\n  \n  enableLogin(){\n    this.clicked = null;\n    this.username = {name: ''};\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpService } from \"app/http.service\";\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TopicComponent } from './topic/topic.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    TopicComponent,\n    UserProfileComponent\n  ],\n  imports: [\n    HttpModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [HttpService, CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dashboard {\\n    border: 5px solid red;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = 1","module.exports = \"\\n\\n<div class=\\\"dashboard\\\">\\n  <h1> Welcome {{name}}</h1>\\n  \\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th>Category</th>\\n        <th>Topic</th>\\n        <th>Username</th>\\n        <th>Posts</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n     <tr *ngFor='let topic of list_of_topics'>\\n      <td>{{ topic.category }}</td>\\n      <td><a [routerLink]=\\\"['/topic/', topic._id]\\\">{{ topic.title }}</a></td>\\n      <td>{{ topic.username }}</td>\\n      <td>{{ topic.count }}</td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n  <p>---------------------------------------------------------------</p>\\n\\n  {{topic_obj | json }}\\n\\n  <strong>{{list_of_topics | json}}</strong>\\n\\n  <form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"topic\\\">Topic:</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" [(ngModel)]=\\\"topic_obj.title\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Description:</label>\\n    <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"text\\\" [(ngModel)]=\\\"topic_obj.text\\\"></textarea>\\n  </div>\\n  \\n  <label for=\\\"category\\\">Category:</label>\\n  <select name=\\\"category\\\" [(ngModel)]=\\\"topic_obj.category\\\">\\n    <option value=\\\"html\\\">HTML</option>\\n    <option value=\\\"javascript\\\">JAVASCRIPT</option>\\n    <option value=\\\"python\\\">PYTHON</option>\\n    <option value=\\\"ruby\\\">RUBY</option>\\n  </select>\\n\\n<br>\\n<br>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postTopic()\\\">Submit</button>\\n</form>\\n\\n\\n\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from \"angular2-cookie/services/cookies.service\";\nimport { HttpService } from \"app/http.service\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  //setting variables to the cookies\n  name = this._cookieService.get('thisIsASecret');\n  userid = this._cookieService.get('userid');\n\n  //creating a object that will be passed on\n   topic_obj = {\n    title: '',\n    text: '',\n    category: '',\n    username: '',\n    _user: ''\n  }\n\n  list_of_topics = [];\n  \n  constructor(private _cookieService:CookieService, private _httpService:HttpService) { }\n\n  ngOnInit() {\n    this.getTopics();\n  }\n\n  getTopics(){\n    this._httpService.getTopics()\n          .then((data) =>{\n            this.list_of_topics = data;\n          })\n          .catch((err) =>{\n            console.log(\"there was an error getting the topics\");\n            \n          })\n  }\n\n\n  postTopic(){\n\n    this.topic_obj._user = this.userid;\n    this.topic_obj.username = this.name;\n\n    this._httpService.postTopic(this.topic_obj)\n      .then((data) =>{\n        console.log(\"successfully posted topics to the database\")\n\n        this.getTopics();\n      })\n\n      .catch((err) => {\n        console.log(\"did not post to the database from the dashboard.component.ts\");\n        \n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/dashboard/dashboard.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(private _http: Http) { }\n\n\n  addNewUser(user){\n    // console.log(\"we are passing in this user name in the service\", user);\n    return this._http.post(\"/users\", user).map(data => data.json()).toPromise()\n  }\n\n\n  getOneTopic(id){\n    console.log(id);\n    return this._http.get(\"/topic/\" + id).map(data => data.json()).toPromise()\n  }\n\n  //making a get request when a link was clicked on a username\n  //using params in the url to pass into the get request\n\n  loadUser(id){\n    console.log(\"the id we are passing in is: \", id);\n    return this._http.get(\"/user/\" + id).map(data => data.json()).toPromise()\n  }\n\n\n  postTopic(topic_obj){\n    // console.log(\"we are passing in the post to the server.js file \", post)\n    return this._http.post(\"/add_topic\", topic_obj).map(data => data.json()).toPromise()\n  }\n\n  getTopics(){\n    return this._http.get('/topics').map((data) => data.json()).toPromise()\n  }\n\n  postAPost(post_info){\n    console.log(\"in the service.ts: \", post_info);\n\n    return this._http.post(\"/add_post\", post_info).map((data) => data.json()).toPromise()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/http.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = 1","module.exports = \"<p>\\n  login works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".topic{\\n    border: 5px soild yellow;\\n}\\n\\n.line{\\n    width: 600px;\\n    height: 5px;\\n    background-color: black;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/topic/topic.component.css\n// module id = ../../../../../src/app/topic/topic.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"topic\\\">\\n  \\n  <h3><a [routerLink]=\\\"['/user', userid]\\\">{{name}}</a> posted a topic </h3>\\n\\n  \\n<div *ngIf='selected_topic'>\\n  <strong><p>{{selected_topic | json }}</p></strong>\\n\\n    <strong><h3>{{selected_topic.title}}</h3></strong>\\n\\n    <p>Description {{selected_topic.text}}<p>\\n</div>\\n<br>\\n<br>\\n<br>\\n\\n{{post_obj | json}}\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"content\\\">Post you answer here..</label>\\n    <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"content\\\" placeholder=\\\"Your Post\\\" [(ngModel)]=\\\"post_obj.content\\\"></textarea>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"makeAPost()\\\">Post</button>\\n</form>\\n\\n<div class=\\\"line\\\"></div>\\n\\n<div *ngIf='selected_topic'>\\n\\n<ul *ngFor=\\\"let post of selected_topic.posts\\\">\\n  <li><a [routerLink]=\\\"['/user', post._user]\\\">{{post.username}}</a> {{post.content}}</li>\\n</ul>\\n\\n\\n\\n</div>\\n\\n\\n\\n\\n  \\n\\n\\n  \\n\\n\\n\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/topic/topic.component.html\n// module id = ../../../../../src/app/topic/topic.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"app/http.service\";\nimport { CookieService } from \"angular2-cookie/services/cookies.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-topic',\n  templateUrl: './topic.component.html',\n  styleUrls: ['./topic.component.css']\n})\nexport class TopicComponent implements OnInit {\n  name = this._cookieService.get('thisIsASecret');\n  userid = this._cookieService.get('userid');\n\n  //set a variable temp to be null\n  topic_id = null;\n  sub = null;\n  selected_topic = null;\n\n   //creating a object that will be passed on\n   post_obj = {\n     username: '',\n     content: '',\n     _user: null,\n     _topic: null,\n  }\n\n\n\n\n  constructor(private _cookieService:CookieService, private _httpService:HttpService, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    //saving the parameter here on init and subscribing to it\n    this.sub = this._route.params.subscribe((params) =>{\n      this.topic_id = params.id\n    })\n\n    this.loadOneTopic();\n  }\n\n   loadOneTopic(){ \n    this._httpService.getOneTopic(this.topic_id)\n      .then((data) =>{\n        console.log(\"the data we got back in the getOneTopic is: \", data);\n        this.selected_topic = data;\n      })\n      .catch((err) =>{\n        console.log(\"we got an error!\")\n      })\n    }\n\n    // loadAllPosts(){\n    //   this._httpService.getAllPosts()\n    //     .then((data) => {\n\n    //     })\n    // }\n\n  makeAPost(){\n    //adding the cookies userid and the topic id that was grabbed from the param\n    this.post_obj._topic = this.topic_id;\n    this.post_obj._user = this.userid;\n    this.post_obj.username = this.name;\n\n    console.log(\"the obj is: \", this.post_obj);\n\n    this._httpService.postAPost(this.post_obj)\n      \n      .then((data) => {\n        console.log(\"we made a good post to the POST in the topic.components.ts\")\n        this.loadOneTopic();\n      })\n\n      .catch((err) => {\n        console.log(\"error in the topic.component.ts\")\n      })\n  } \n\n\n\n\n\n\n  ngOnDestroy(){\n    console.log(\"unsubscribing from topics\");\n    this.sub.unsubscribe();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/topic/topic.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/user-profile/user-profile.component.css\n// module id = ../../../../../src/app/user-profile/user-profile.component.css\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"selected_user\\\">\\n  {{selected_user | json}}\\n\\n<div *ngIf=\\\"selected_user._comments\\\">\\n    <h2>Username: {{selected_user.name | json}}</h2>\\n    <h3>Posted....</h3>\\n    <h4>Topics: {{selected_user._topics | json}}</h4>\\n    <h4>Posts: {{selected_user._posts | json}}</h4>\\n    <h4>Comments: {{selected_user._comments | json}}</h4>\\n</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/user-profile/user-profile.component.html\n// module id = ../../../../../src/app/user-profile/user-profile.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from \"angular2-cookie/services/cookies.service\";\nimport { HttpService } from \"app/http.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(private _cookieService:CookieService, private _httpService:HttpService, private _route: ActivatedRoute) { }\n  name = this._cookieService.get('thisIsASecret');\n  userid = this._cookieService.get('userid');\n\n  sub = null;\n  param_user_id = null;\n\n  selected_user  = null;\n\n  ngOnInit() {\n    //need to subscribe to the user_id passed into the url\n    //saving the parameter here on init and subscribing to it\n    this.sub = this._route.params.subscribe((params) =>{\n      this.param_user_id = params.id\n    })\n\n    this.loadUser();\n\n  }\n\n  loadUser(){\n    this._httpService.loadUser(this.param_user_id)\n      .then((data) =>{\n        console.log(\"the data we got back in the loadUser is: \", data);\n        this.selected_user = data;\n      })\n      .catch((err) =>{\n        console.log(\"we got an error!\")\n      })\n  }\n\n\n\n\n\n\n\n\n\n  ngOnDestroy(){\n    console.log(\"unsubscribing from selected_user\");\n    this.sub.unsubscribe();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/app/user-profile/user-profile.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/lgspacil/Desktop/discussionBoard-server/public/src/main.ts"],"sourceRoot":""}